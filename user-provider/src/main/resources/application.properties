#server.port=8904
server.port=8904
#解决不同springboot工程不能在一个tomcat中部署问题
spring.jmx.default-domain=user-service
#server.context-path=/${spring.jmx.default-domain}
##management.context-path=/manage
#server.tomcat.uri-encoding=UTF-8
#spring.http.encoding.charset=UTF-8
#spring.http.encoding.enabled=true
#spring.http.encoding.force=true
#spring.messages.encoding=UTF-8
#endpoints.health.sensitive=false
##显示一个auto-configuration的报告，该报告展示所有auto-configuration候选者及它们被应用或未被应用的原因
#endpoints.autoconfig.sensitive=false
##显示一个应用中所有Spring Beans的完整列表
#endpoints.beans.sensitive=false
##显示一个所有@ConfigurationProperties的整理列表
#endpoints.configprops.sensitive=false
##执行一个线程转储
#endpoints.dump.sensitive=false
##暴露来自Spring\u3000ConfigurableEnvironment的属性
#endpoints.env.sensitive=false
##展示当前应用的’指标’信息
#endpoints.metrics.sensitive=false
##显示一个所有@RequestMapping路径的整理列表
#endpoints.mappings.sensitive=false
##显示trace信息（默认为最新的一些HTTP请求）
#endpoints.trace.sensitive=false
##禁止对外提供基于JMX的endpoints
#endpoints.jmx.enabled=false
##禁用安全管理策略  有cas
#management.security.enabled=false
##REST超时配置
#rest.ReadTimeout=35000
#rest.ConnectTimeout=5000
##spring.trace.log.capacity=1000
#spring.trace.log.interceptPath=/${spring.jmx.default-domain}/js,/${spring.jmx.default-domain}/css,/${spring.jmx.default-domain}/img
#注册服务的ip地址
eureka.client.service-url.defaultZone=http://user:123456@127.0.0.1:8900/eureka/
eureka.client.healthcheck.enabled=false
spring.application.name=${spring.jmx.default-domain}
#eureka.client.register-with-eureka=false
#eureka.client.fetch-registry=false
#数据库连接
user.db.url=jdbc:oracle:thin:@127.0.0.1:1521:orcl
user.db.username=demo_user
user.db.password=gtis
